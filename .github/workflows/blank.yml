name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v3

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Unit Tests
        run: ./gradlew test --stacktrace
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: build/test-results/test

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build project
        run: ./gradlew build --stacktrace

  instrumentation-tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            api-level: 31
            target: google_apis
            channel: stable
    steps:
      - uses: actions/checkout@v4

      - name: Enable KVM group perms
        run: |
          sudo groupadd -r kvm || true
          sudo usermod -a -G kvm runner
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm || true

      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: gradle/gradle-build-action@v2

      - name: Create emu-update-last-check.ini
        run: |
          mkdir -p /home/runner/.android
          touch /home/runner/.android/emu-update-last-check.ini
          chmod 666 /home/runner/.android/emu-update-last-check.ini

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.arch }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          channel: ${{ matrix.channel }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-load
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          channel: ${{ matrix.channel }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          disable-animations: true
          script: |
            touch emulator.log
            chmod 777 emulator.log
            adb logcat >> emulator.log &
            ./gradlew connectedDebugAndroidTest

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: ${{ matrix.api-level }}-${{ matrix.arch }}-instrumentation-test-results
          path: |
            emulator.log
            ./**/build/reports/androidTests/connected/**
